- name: Determine active container
  shell: |
    docker ps --filter "name=jampro-app-blue" --filter "status=running" -q
  register: blue_running
  changed_when: false

- name: Set next container color and port
  set_fact:
    next_color: "{{ 'green' if blue_running.stdout else 'blue' }}"
    next_port: "{{ 8082 if blue_running.stdout else 8081 }}"

- name: Check if port is available
  shell: |
    lsof -i :{{ next_port }} || true
  register: port_check
  changed_when: false

- name: Find an available port if needed
  shell: |
    for port in 8082 8083 8084 8085; do
      if ! lsof -i :$port; then
        echo $port
        break
      fi
    done
  register: available_port
  changed_when: false
  when: port_check.stdout != ""

- name: Set next port to available one
  set_fact:
    next_port: "{{ available_port.stdout }}"
  when: port_check.stdout != ""

- name: Deploy new container
  community.docker.docker_container:
    name: "jampro-app-{{ next_color }}"
    image: timor1/jampro:latest
    state: started
    ports:
      - "{{ next_port }}:80"
    restart_policy: always
    recreate: yes

- name: Update nginx configuration (template)
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/default.conf
    owner: root
    group: root
    mode: '0644'

- name: Reload nginx
  ansible.builtin.service:
    name: nginx
    state: reloaded

- name: Remove old container
  community.docker.docker_container:
    name: "jampro-app-{{ 'blue' if next_color == 'green' else 'green' }}"
    state: absent
  ignore_errors: yes
